{
    "swagger": "2.0",
    "info": {
        "description": "API for ML Master Data",
        "title": "ML Master Data API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/",
    "paths": {
        "/coaches/{coachID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a coach by ID with the given coach ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get a coach by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coach ID",
                        "name": "coachID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coach"
                        }
                    },
                    "400": {
                        "description": "Coach ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Coach not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a coach in a team and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update a coach in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Coach ID",
                        "name": "coachID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Coach name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Coach role",
                        "name": "role",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Coach image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Coach"
                        }
                    },
                    "400": {
                        "description": "Coach ID is required\" or \"File size must not exceed 500 KB\" or \"Invalid file type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Coach not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/heroes": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all heroes data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hero"
                ],
                "summary": "Get all heroes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Hero"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a hero and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hero"
                ],
                "summary": "Create a hero",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hero name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Hero image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Hero"
                        }
                    }
                }
            }
        },
        "/heroes/{heroID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a hero data by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hero"
                ],
                "summary": "Get a hero by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hero ID",
                        "name": "heroID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Hero"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a hero and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Hero"
                ],
                "summary": "Update a hero",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Hero ID",
                        "name": "heroID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hero name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Hero image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Hero"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Login to get JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login",
                        "name": "login",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a match by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get a match by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.MatchResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a match with the given match ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Update a match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Match data",
                        "name": "match",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Match updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all games for a match with the given match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all games for a match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GameResponseDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new game with the given match ID and additional information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Create a new game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Game data",
                        "name": "game",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GameRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Game created successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a game by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a game by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GameResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a game with the given game ID and match ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Game data",
                        "name": "game",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GameRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Game updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/explaners": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all Explaners for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all Explaners for a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.ExplanerResponseDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add an explaner for a game with the given game ID and match ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Add an explaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Explaner data",
                        "name": "explaner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExplanerRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Explaner added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/explaners/{explanerID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get an explaner by ID for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get an explaner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Explaner ID",
                        "name": "explanerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ExplanerResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, game, or Explaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update an Explaner with the given game ID, match ID, and Explaner ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update an Explaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Explaner ID",
                        "name": "explanerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Explaner data",
                        "name": "explaner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.ExplanerRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Explaner updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Explaner"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Explaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an Explaner with the given game ID, match ID, and Explaner ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete an Explaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Explaner ID",
                        "name": "explanerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Explaner deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Explaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/goldlaners": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all Goldlaners for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all Goldlaners for a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.GoldlanerResponseDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a goldlaner for a game with the given game ID and match ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Add a goldlaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Goldlaner data",
                        "name": "goldlaner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GoldlanerRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Goldlaner added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/goldlaners/{goldlanerID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a Goldlaner by the given game ID, match ID, and Goldlaner ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a Goldlaner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Goldlaner ID",
                        "name": "goldlanerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GoldlanerResponseDto"
                        }
                    },
                    "404": {
                        "description": "Match or game or Goldlaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a Goldlaner with the given game ID, match ID, and Goldlaner ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update a Goldlaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Goldlaner ID",
                        "name": "goldlanerID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Goldlaner data",
                        "name": "goldlaner",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.GoldlanerRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goldlaner updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.Goldlaner"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game, Match, or Goldlaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a Goldlaner with the given game ID, match ID, and Goldlaner ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete a Goldlaner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Goldlaner ID",
                        "name": "goldlanerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Goldlaner deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game, Match, or Goldlaner not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/lord-results": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all lord results for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all lord results for a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.LordResultResponseDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a lord result for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Add a lord result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lord result data",
                        "name": "lordResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LordResultRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Lord result added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/lord-results/{lordResultID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a LordResult by the given game ID, match ID, and Lord Result ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a LordResult by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lord Result ID",
                        "name": "lordResultID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LordResultResponseDto"
                        }
                    },
                    "404": {
                        "description": "Match or game or Lord result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a LordResult with the given game ID, match ID, and Lord Result ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update a LordResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lord Result ID",
                        "name": "lordResultID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Lord result data",
                        "name": "lordResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LordResultRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lord result updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.LordResult"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Lord result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a LordResult with the given game ID, match ID, and Lord Result ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete a LordResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Lord Result ID",
                        "name": "lordResultID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Lord result deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Lord result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/trio-mids": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all TrioMids for a game with the given game ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all TrioMids for a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.TrioMidResponseDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a TrioMid for a game with the given game ID and match ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Add a TrioMid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TrioMid data",
                        "name": "trioMid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrioMidRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "TrioMid added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/trio-mids/{trioMidID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a TrioMid with the given game ID, match ID, and TrioMid ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a TrioMid by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TrioMid ID",
                        "name": "trioMidID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trio mid found successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.TrioMidResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Trio mid not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a TrioMid with the given game ID, match ID, and TrioMid ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update a TrioMid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TrioMid ID",
                        "name": "trioMidID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Trio mid data",
                        "name": "trioMid",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TrioMidRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trio mid updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TrioMid"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Trio mid not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a TrioMid with the given game ID, match ID, and TrioMid ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete a TrioMid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "TrioMid ID",
                        "name": "trioMidID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TrioMid deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, game, or TrioMid not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/turtle-results": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a turtle result for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Add a turtle result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Turtle result data",
                        "name": "turtleResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TurtleResultRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Turtle result added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or game not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/games/{gameID}/turtle-results/{turtleResultID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a TurtleResult by ID for a game with the given game ID and match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get a TurtleResult by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Turtle result ID",
                        "name": "turtleResultID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TurtleResultResponseDto"
                        }
                    },
                    "404": {
                        "description": "Match, Game, or Turtle result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a turtle result with the given game ID, match ID, and turtle result ID with the given information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update a turtle result",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Turtle Result ID",
                        "name": "turtleResultID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Turtle result data",
                        "name": "turtleResult",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TurtleResultRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Turtle result updated successfully",
                        "schema": {
                            "$ref": "#/definitions/models.TurtleResult"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Turtle result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a TurtleResult with the given game ID, match ID, and Turtle Result ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete a TurtleResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "gameID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Turtle Result ID",
                        "name": "turtleResultID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Turtle result deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Game or Turtle result not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get teams by match ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get teams by match ID",
                "operationId": "get-teams-by-match-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Team list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Team"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/coaches": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all coaches match with the given match ID and team ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all coaches match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coaches match found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CoachMatchResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a coach match with the given match ID, team ID and coach ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add a coach match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Coach ID",
                        "name": "coachID",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Coach match added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/coaches/{coachID}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove a coach match with the given match ID, team ID, and coach ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Remove a coach match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Coach ID",
                        "name": "coachID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coach match removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or coach not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/flex-picks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all flex picks of a match by team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all flex picks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flex pick list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.FlexPickResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add flex pick to match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add flex pick",
                "operationId": "add-flex-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Flex pick",
                        "name": "flexPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FlexPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Flex pick added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/flex-picks/{flexPickID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a flex pick by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get flex pick by ID",
                "operationId": "get-flex-pick-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Flex pick ID",
                        "name": "flexPickID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.FlexPickResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Flex pick not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Flex Pick ID",
                        "name": "flexPickID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Flex pick",
                        "name": "flexPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.FlexPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flex pick updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, team, or flex pick not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete flex pick by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Delete flex pick",
                "operationId": "delete-flex-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Flex pick ID",
                        "name": "flexPickID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flex pick deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, team, or flex pick not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-bans": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all hero bans of a match by team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all hero bans",
                "operationId": "get-all-hero-bans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero bans",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HeroBanResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add hero ban to match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add hero ban",
                "operationId": "add-hero-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hero ban",
                        "name": "heroBan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HeroBanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero ban added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-bans-first-phase-more-than-zero": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all hero bans with first phase more than zero of a match by team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all hero bans with first phase more than zero",
                "operationId": "get-all-hero-bans-with-first-phase-more-than-zero",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HeroBanResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Hero bans not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-bans/{HeroBanID}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update hero ban in match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Update hero ban",
                "operationId": "update-hero-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hero ban ID",
                        "name": "HeroBanID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hero ban",
                        "name": "heroBan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HeroBanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero ban updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove hero ban from match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Remove hero ban",
                "operationId": "remove-hero-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "HeroBan ID",
                        "name": "HeroBanID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-picks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all hero picks in a match with the given team ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all hero picks",
                "operationId": "get-all-hero-picks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HeroPickResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Hero picks not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add hero pick to match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add hero pick",
                "operationId": "add-hero-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hero pick",
                        "name": "heroPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HeroPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero pick added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-picks-first-phase-more-than-zero": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all hero picks with first phase more than zero of a match by team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all hero picks with first phase more than zero",
                "operationId": "get-all-hero-picks-with-first-phase-more-than-zero",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.HeroPickResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Hero picks not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/hero-picks/{heroPickID}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update hero pick in match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Update hero pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hero pick ID",
                        "name": "heroPickID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Hero pick",
                        "name": "heroPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.HeroPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hero pick updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove hero pick from match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Remove hero pick",
                "operationId": "remove-hero-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Hero pick ID",
                        "name": "heroPickID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, team, or hero pick not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/players": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all players for a match and team with the given match ID and team ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all players for a match and team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PlayerMatchResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add a player to a match by specifying the match ID, team ID, and player ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add a player to a match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Player match request",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PlayerMatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Player match added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/players/{playerID}": {
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Remove a player match with the given match ID, team ID and player ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Remove a player match",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Player match removed successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/priority-bans": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all priority bans in a match with specific team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all priority bans",
                "operationId": "get-all-priority-bans",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority bans",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PriorityBanResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add priority ban to match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add priority ban",
                "operationId": "add-priority-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Priority ban",
                        "name": "priorityBan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityBanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Priority ban added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/priority-bans/{priorityBanID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get priority ban by ID in a match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get priority ban by ID",
                "operationId": "get-priority-ban-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority Ban ID",
                        "name": "priorityBanID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority Ban",
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityBanResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Priority ban not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update priority ban in match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Update priority ban",
                "operationId": "update-priority-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority Ban ID",
                        "name": "priorityBanID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Priority Ban",
                        "name": "priorityBan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityBanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority ban updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, team, or priority ban not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete priority ban in match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Delete priority ban",
                "operationId": "delete-priority-ban",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority Ban ID",
                        "name": "priorityBanID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority ban deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match, team, or priority ban not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/priority-picks": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all priority picks of a match by team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all priority picks",
                "operationId": "get-all-priority-picks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority pick list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.PriorityPickResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Add priority pick to match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Add priority pick",
                "operationId": "add-priority-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Priority pick",
                        "name": "priorityPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Priority pick added successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/matches/{matchID}/teams/{teamID}/priority-picks/{priorityPickID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a priority pick by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get priority pick by ID",
                "operationId": "get-priority-pick-by-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority pick ID",
                        "name": "priorityPickID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityPickResponseDto"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Priority pick not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update priority pick in match",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Update priority pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority pick ID",
                        "name": "priorityPickID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Priority pick",
                        "name": "priorityPick",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.PriorityPickRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority pick updated successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Match or team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a priority pick by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Delete priority pick",
                "operationId": "delete-priority-pick",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Match ID",
                        "name": "matchID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Priority Pick ID",
                        "name": "priorityPickID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Priority pick deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Priority pick not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get user data from JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Get user data",
                "responses": {
                    "200": {
                        "description": "User data",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/players/{playerID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a player by ID with the given player ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get a player by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "playerID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    },
                    "400": {
                        "description": "Player ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Player not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/players/{teamID}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a player in a team and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update a player in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Player role",
                        "name": "role",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Player image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    },
                    "400": {
                        "description": "Player ID is required\" or \"File size must not exceed 500 KB\" or \"Invalid file type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Player not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/teams": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all teams",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get all teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Team"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a team and save its logo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Team logo",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/teams/{teamID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a team by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get a team by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    },
                    "400": {
                        "description": "Team ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Team not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a team and save its logo",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Update a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Team name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Team logo",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Team"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/teams/{teamID}/coaches": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all coaches in a team with the given team ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get all coaches in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Coach"
                            }
                        }
                    },
                    "400": {
                        "description": "Team ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a coach in a team and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create a coach in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Coach name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Coach role",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Coach image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Coach"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/teams/{teamID}/players": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all players in a team with the given team ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Get all players in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Player"
                            }
                        }
                    },
                    "400": {
                        "description": "Team ID is required",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Team not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a player in a team by ID and save its image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Team"
                ],
                "summary": "Create a player in a team",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Team ID",
                        "name": "teamID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player role",
                        "name": "role",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Player image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    },
                    "400": {
                        "description": "Team ID is required\" or \"Name and Role are required\" or \"File size must not exceed 500 KB\" or \"Invalid file type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Team not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tournaments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all tournaments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament"
                ],
                "summary": "Get all tournaments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Tournament"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new tournament with the given name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament"
                ],
                "summary": "Create a new tournament",
                "parameters": [
                    {
                        "description": "Tournament request",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TournamentRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Tournament"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tournaments/{tournamentID}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a tournament by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament"
                ],
                "summary": "Get a tournament by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "tournamentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tournament"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Tournament not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a tournament with the given name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament"
                ],
                "summary": "Update a tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "tournamentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tournament request",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.TournamentRequestDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Tournament"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Tournament not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a tournament with the given tournament ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tournament"
                ],
                "summary": "Delete a tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "tournamentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tournament deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Tournament not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tournaments/{tournamentID}/matches": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all matches for a tournament with the given tournament ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Get all matches for a tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "tournamentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.MatchResponseDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Tournament not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a match for a tournament and save its data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Match"
                ],
                "summary": "Create a match for a tournament",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tournament ID",
                        "name": "tournamentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Match request",
                        "name": "dto",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.MatchRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Match"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CoachMatchResponseDto": {
            "type": "object",
            "properties": {
                "coach": {
                    "type": "object",
                    "properties": {
                        "coach_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "role": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "coach_id": {
                    "type": "integer"
                },
                "coach_match_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ExplanerRequestDto": {
            "type": "object",
            "required": [
                "early_result",
                "hero_id",
                "team_id"
            ],
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "hero_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.ExplanerResponseDto": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "explaner_id": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.FlexPickRequestDto": {
            "type": "object",
            "required": [
                "hero_id",
                "pick_rate",
                "role",
                "total"
            ],
            "properties": {
                "hero_id": {
                    "type": "integer"
                },
                "pick_rate": {
                    "type": "number"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Roam/Exp",
                        "Jung/Gold",
                        "Jung/Mid",
                        "Jung/Exp"
                    ]
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.FlexPickResponseDto": {
            "type": "object",
            "properties": {
                "flex_pick_id": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                },
                "pick_rate": {
                    "type": "number"
                },
                "role": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.GameRequestDto": {
            "type": "object",
            "required": [
                "first_pick_team_id",
                "game_number",
                "second_pick_team_id",
                "winner_team_id"
            ],
            "properties": {
                "first_pick_team_id": {
                    "type": "integer"
                },
                "full_draft_image": {
                    "type": "string"
                },
                "game_number": {
                    "type": "integer"
                },
                "second_pick_team_id": {
                    "type": "integer"
                },
                "video_link": {
                    "type": "string"
                },
                "winner_team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.GameResponseDto": {
            "type": "object",
            "properties": {
                "first_pick_team_id": {
                    "type": "integer"
                },
                "first_team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "full_draft_image": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "game_number": {
                    "type": "integer"
                },
                "match_id": {
                    "type": "integer"
                },
                "second_pick_team_id": {
                    "type": "integer"
                },
                "second_team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "video_link": {
                    "type": "string"
                },
                "winner_team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "winner_team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.GoldlanerRequestDto": {
            "type": "object",
            "required": [
                "early_result",
                "hero_id",
                "team_id"
            ],
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "hero_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.GoldlanerResponseDto": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "goldlaner_id": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.HeroBanRequestDto": {
            "type": "object",
            "required": [
                "first_phase",
                "hero_id",
                "second_phase"
            ],
            "properties": {
                "first_phase": {
                    "type": "integer"
                },
                "heroBanGame": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "game_number",
                            "is_banned"
                        ],
                        "properties": {
                            "game_number": {
                                "type": "integer"
                            },
                            "is_banned": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "second_phase": {
                    "type": "integer"
                }
            }
        },
        "dto.HeroBanResponseDto": {
            "type": "object",
            "properties": {
                "first_phase": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_ban_id": {
                    "type": "integer"
                },
                "hero_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                },
                "second_phase": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.HeroPickRequestDto": {
            "type": "object",
            "required": [
                "first_phase",
                "hero_id",
                "second_phase"
            ],
            "properties": {
                "first_phase": {
                    "type": "integer"
                },
                "heroPickGame": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "game_number",
                            "is_picked"
                        ],
                        "properties": {
                            "game_number": {
                                "type": "integer"
                            },
                            "is_picked": {
                                "type": "boolean"
                            }
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "second_phase": {
                    "type": "integer"
                }
            }
        },
        "dto.HeroPickResponseDto": {
            "type": "object",
            "properties": {
                "first_phase": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "hero_pick_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                },
                "second_phase": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.LoginDto": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dto.LordResultRequestDto": {
            "type": "object",
            "required": [
                "initiate",
                "phase",
                "result",
                "setup",
                "team_id"
            ],
            "properties": {
                "initiate": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.LordResultResponseDto": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "initiate": {
                    "type": "string"
                },
                "lord_result_id": {
                    "type": "integer"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.MatchRequestDto": {
            "type": "object",
            "required": [
                "date",
                "day",
                "team_a_id",
                "team_a_score",
                "team_b_id",
                "team_b_score",
                "week"
            ],
            "properties": {
                "date": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "team_a_id": {
                    "type": "integer"
                },
                "team_a_score": {
                    "type": "integer"
                },
                "team_b_id": {
                    "type": "integer"
                },
                "team_b_score": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "dto.MatchResponseDto": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "match_id": {
                    "type": "integer"
                },
                "team_a": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_a_id": {
                    "type": "integer"
                },
                "team_a_score": {
                    "type": "integer"
                },
                "team_b": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_b_id": {
                    "type": "integer"
                },
                "team_b_score": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "dto.PlayerMatchRequestDto": {
            "type": "object",
            "required": [
                "player_id"
            ],
            "properties": {
                "player_id": {
                    "type": "integer"
                }
            }
        },
        "dto.PlayerMatchResponseDto": {
            "type": "object",
            "properties": {
                "match_team_detail_id": {
                    "type": "integer"
                },
                "player": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "player_id": {
                            "type": "integer"
                        },
                        "role": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "player_id": {
                    "type": "integer"
                },
                "player_match_id": {
                    "type": "integer"
                }
            }
        },
        "dto.PriorityBanRequestDto": {
            "type": "object",
            "required": [
                "ban_rate",
                "hero_id",
                "role",
                "total"
            ],
            "properties": {
                "ban_rate": {
                    "type": "number"
                },
                "hero_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Gold",
                        "Exp",
                        "Roam",
                        "Mid",
                        "Jung"
                    ]
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PriorityBanResponseDto": {
            "type": "object",
            "properties": {
                "ban_rate": {
                    "type": "number"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                },
                "priority_ban_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PriorityPickRequestDto": {
            "type": "object",
            "required": [
                "hero_id",
                "pick_rate",
                "role",
                "total"
            ],
            "properties": {
                "hero_id": {
                    "type": "integer"
                },
                "pick_rate": {
                    "type": "number"
                },
                "role": {
                    "type": "string",
                    "enum": [
                        "Gold",
                        "Exp",
                        "Roam",
                        "Mid",
                        "Jung"
                    ]
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.PriorityPickResponseDto": {
            "type": "object",
            "properties": {
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "match_team_detail_id": {
                    "type": "integer"
                },
                "pick_rate": {
                    "type": "number"
                },
                "priority_pick_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.TournamentRequestDto": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.TrioMidRequestDto": {
            "type": "object",
            "required": [
                "early_result",
                "hero_id",
                "role",
                "team_id"
            ],
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "hero_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TrioMidResponseDto": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "hero": {
                    "type": "object",
                    "properties": {
                        "hero_id": {
                            "type": "integer"
                        },
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        }
                    }
                },
                "hero_id": {
                    "type": "integer"
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_id": {
                    "type": "integer"
                },
                "trio_mid_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TurtleResultRequestDto": {
            "type": "object",
            "required": [
                "initiate",
                "phase",
                "result",
                "setup",
                "team_id"
            ],
            "properties": {
                "initiate": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "dto.TurtleResultResponseDto": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "initiate": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team": {
                    "type": "object",
                    "properties": {
                        "image": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "team_id": {
                            "type": "integer"
                        }
                    }
                },
                "team_id": {
                    "type": "integer"
                },
                "turtle_result_id": {
                    "type": "integer"
                }
            }
        },
        "models.Coach": {
            "type": "object",
            "properties": {
                "coach_id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Explaner": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "explaner_id": {
                    "type": "integer"
                },
                "game_id": {
                    "type": "integer"
                },
                "hero_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "first_pick_team_id": {
                    "type": "integer"
                },
                "full_draft_image": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "game_number": {
                    "type": "integer"
                },
                "match_id": {
                    "type": "integer"
                },
                "second_pick_team_id": {
                    "type": "integer"
                },
                "video_link": {
                    "type": "string"
                },
                "winner_team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Goldlaner": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "goldlaner_id": {
                    "type": "integer"
                },
                "hero_id": {
                    "type": "integer"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Hero": {
            "type": "object",
            "properties": {
                "hero_id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.LordResult": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "initiate": {
                    "type": "string"
                },
                "lord_result_id": {
                    "type": "integer"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Match": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "match_id": {
                    "type": "integer"
                },
                "team_a_id": {
                    "type": "integer"
                },
                "team_a_score": {
                    "type": "integer"
                },
                "team_b_id": {
                    "type": "integer"
                },
                "team_b_score": {
                    "type": "integer"
                },
                "tournament_id": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "models.Player": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "player_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Team": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                }
            }
        },
        "models.Tournament": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "tournament_id": {
                    "type": "integer"
                }
            }
        },
        "models.TrioMid": {
            "type": "object",
            "properties": {
                "early_result": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "hero_id": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                },
                "trio_mid_id": {
                    "type": "integer"
                }
            }
        },
        "models.TurtleResult": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "initiate": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "setup": {
                    "type": "string"
                },
                "team_id": {
                    "type": "integer"
                },
                "turtle_result_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}